- name: debug 
  requires: boolean
  category: general
  default: 0
  desc: "turn on debugging in the console or not"
- name: colSelectEnabled
  requires: boolean
  category: general
  default: true
  desc: "Make columns selectable for use with API"
- name: editableRegionEnabled
  requires: boolean
  category: general
  default: true
  desc: "Turn on facility to add editable regions"
- name: autoEdit
  requires: boolean
  category: general
  default: true
  desc: "Take existing column markup and wrap in default editable regions if none exist"
- name: remoteURL
  requires: string
  category: general
  default: "/replace-with-your-url"
  desc: "URL to POST to on save: NB, now posts as key value pair, so should now post as 'content'"
- name: cssInclude
  requires: string
  category: general
  default: "//maxcdn...snip...font-awesome.min.css"
  desc: "URL to external CSS file to load (i.e font awesome)"
- name: filterCallback
  requires: function
  category: general
  default: "null"
  desc: "Filter callback. see gm.runFilter(): Callback receives two params: the template grid element and whether is called from the init or deinit method"
- name: canvasId
  requires: string
  category: general
  default: "gm-canvas"
  desc: "The ID of the main internal canvas as generated by Gridmanager"
- name: controlId
  requires: string
  category: general
  default: "gm-controls"
  desc: "The ID of the main control bar as generated by Gridmanager"
- name: controlMove
  requires: string
  category: general
  default: "gm-move"
  desc: "Move handle class"
- name: controlNestedEditable
  requires: string
  category: general
  default: "gm-controls-element"
  desc: "Editable element toolbar class"
- name: controlButtons
  requires: array
  category: general
  default: "[[12], [6,6]..snip..]"
  desc: "Array of button widths, i.e <code>[[12],[6-6]]</code> which are then autogenerated in the top control bar"
- name: customControls
  requires: object
  category: general
  default: "{ global_row: [], global_col: [] }"
  desc: "Array of objects for custom controls: see examples"
- name: controlButtonClass
  requires: string
  category: general
  default: "btn  btn-xs  btn-primary"
  desc: "Default control bar button class"
- name: controlButtonSpanClass
  requires: string
  category: general
  default: "fa fa-plus-circle"
  desc: "Default control bar button icon class"
- name: controlAppend
  requires: string
  category: general
  default: "See source code for default bootstrap markup"
  desc: "Control bar markup for main controls"
- name: controlContentElem
  requires: string
  category: general
  default: "See source code for default bootstrap markup"
  desc: "Controls for content elements"
- name: gmEditClass
  requires: string
  category: general
  default: "gm-editing"
  desc: "Standard Edit Calss, Applied to active elements"
- name: gmEditClassSelected
  requires: string
  category: general
  default: "gm-editing-selected"
  desc: "Applied to the currently selected element"
- name: gmEditRegion
  requires: string
  category: general
  default: "gm-editable-region"
  desc: "Editable Region Class, i.e what RTEs get attached to"
- name: gmContentRegion
  requires: string
  category: general
  default: "gm-content"
  desc: "Editable container class"
- name: gmToolClass
  requires: string
  category: general
  default: "gm-tools"
  desc: "Tool bar class which are inserted dynamically"
- name: gmClearClass
  requires: string
  category: general
  default: "clearfix"
  desc: "Clearing class to fix floats, used on most toolbars"
- name: gmFloatLeft
  requires: string
  category: general
  default: "pull-left"
  desc: "Generic Float Left"
- name: gmFloatRight
  requires: string
  category: general
  default: "pull-right"
  desc: "Generic Float Right"
- name: gmBtnGroup
  requires: string
  category: general
  default: "btn-group"
  desc: "Generic Button Group Class"
- name: gmDangerClass
  requires: string
  category: general
  default: "btn-danger"
  desc: "Generic Class to indicate active button"
- name: rowClass
  requires: string
  category: row
  default: "row"
  desc: "Generic row class. change to <code>row-fluid</code> for fluid width in Bootstrap"
- name: rowSelector
  requires: string
  category: row
  default: "div.row"
  desc: "Used to find rows, change to <code>div.row-fluid</code> for fluid width"
- name: rowSortingClass
  requires: string
  category: row
  default: "bg-warning"
  desc: "class of background element when sorting rows"
- name: rowButtonsPrepend
  requires: object
  category: row
  default: 
  desc: "Buttons at the top of each row - pass in standard button objects (see below)"
- name: rowButtonsAppend
  requires: object
  category: row
  default: 
  desc: "Buttons at the bottom of each row"
- name: rowCustomClasses
  requires: array
  category: row
  default: 
  desc: "add your own to make them available in the row settings, i.e <code>['one', 'two']</code>"
- name: colClass
  requires: string
  category: col
  default: "column"
  desc: "Column Class: this gets automatically added to identified columns"
- name: contentDraggableClass
  requires: string
  category: col
  default: "gm-content-draggable"
  desc: "Class to allow content to be draggable"
- name: addResponsiveClasses
  requires: boolean
  category: general
  default: "true"
  desc: "Adds any missing classes in columns for muti-device support"
- name: addDefaultColumnClass
  requires: boolean
  category: col
  default: "true"
  desc: "Adds colClass to columns if missing: addResponsiveClasses must be true for this to activate"
- name: colDesktopClass
  requires: string
  category: col
  default: "col-md-"
  desc: "Generic desktop size layout class"
- name: colTabletClass
  requires: string
  category: col
  default: "col-sm-"
  desc: "Generic tablet size layout class"
- name: colPhoneClass
  requires: string
  category: col
  default: "col-xs-"
  desc: "Generic phone size layout class"
- name: colDesktopSelector
  requires: string
  category: col
  default: "div[class*=col-md-]"
  desc: "Wild card column desktop selector"
- name: colTabletSelector
  requires: string
  category: col
  default: "div[class*=col-sm-]"
  desc: "Wildcard column tablet selector"
- name: colPhoneSelector
  requires: string
  category: col
  default: "div[class*=col-xs-]"
  desc: "Wildcard column phone selector"
- name: classRenameSuffix
  requires: string
  category: col
  default: "-clsstmp"
  desc: "String used to temporarily rename column classes not in use"
- name: layoutDefaultMode
  requires: string
  category: general
  default: auto
  desc: "Default layout mode loaded after init"
- name: currentClassMode
  requires: string
  category: general
  default: ""
  desc: "Current layout column mode"
- name: colAdditionalClass
  requires: string
  category: col
  default: ""
  desc: "Additional column class to add: now possibly obselete as colClass gets autoadded"
- name: colButtonsPrepend
  requires: object
  category: col
  default: ""
  desc: "Buttons at the top of each col" 
- name: colButtonsAppend
  requires: object
  category: col
  default: 
  desc: "Buttons at the bottom of each col" 
- name: colCustomClasses
  requires: array
  category: col
  default: "['example-col-class','test-class']"
  desc: "Custom column classes - add your own to make them available in the col settings, i.e <code>['one', 'two']</code>"
- name: colMax
  requires: integer
  category: col
  default: "12"
  desc: "Maximum column span value: if you've got a 24 column grid via customised bootstrap, you could set this to 24."
- name: colResizeStep
  requires: integer
  category: col
  default: "1"
  desc: "Column resizing +- value: this is also the colMin value, as columns won't be able to go smaller than this number (otherwise you hit zero and all hell breaks loose)"
- name: tinymce
  requires: object
  category: rte
  default: "{}"
  desc: "Custom TinyMCE Configuration"
- name: tinymce.config
  requires: object
  category: rte
  default: "{}"
  desc: "Custom TinyMCE Configuration config struct (see tinyMCE documentation)"
- name: ckeditor
  requires: object
  category: rte
  default: "{}"
  desc: "Custom CKEditor Configuration"
- name: ckeditor.customConfig
  requires: string
  category: rte
  default: ""
  desc: "Path to ckeditor external custom configuration file: note, relative path is relative to your ckeditor.js file, not the page;"
- name: title
  requires: string
  category: btnObject
  default: 
  desc: "Title for button"
- name: element
  requires: string
  category: btnObject
  default: 
  desc: "Element to generate, i.e a"
- name: btnClass
  requires: string
  category: btnObject
  default: 
  desc: "Class for the button"
- name: iconClass
  requires: string
  category: btnObject
  default: 
  desc: "Class for the button icon"
- name: callback
  requires: string
  category: customControls
  default: 
  desc: "Name of custom callback function (required)"
- name: loc
  requires: string
  category: customControls
  default: 
  desc: "Location of custom callback function button: options are <code>top</code> or <code>bottom</code>"
- name: iconClass
  requires: string
  category: customControls
  default: 
  desc: "css class of icon for custom callback function button, i.e <code>fa fa-myicon</code>"
- name: btnClass
  requires: string
  category: customControls
  default: 
  desc: "css class of button for custom callback function button"
